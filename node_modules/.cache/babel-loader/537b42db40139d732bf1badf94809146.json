{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Workspace/Kanya/react-spel/src/Components/Canvas.js\";\nimport React, { Component } from 'react';\nimport { Container, Col } from 'reactstrap';\nimport './../App.css';\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas() {\n    _classCallCheck(this, Canvas);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Canvas).apply(this, arguments));\n  }\n\n  _createClass(Canvas, [{\n    key: \"render\",\n    // componentDidMount() {\n    //     this.updateCanvas();\n    // }\n    // updateCanvas() {\n    //     const canvas = this.refs.canvas;\n    //     const ctx = canvas.getContext(\"2d\");\n    // }\n    value: function render() {\n      var canvas = this.refs.canvas;\n      var ctx = canvas.getContext(\"2d\");\n      var x = canvas.width / 2;\n      var y = canvas.height / 2;\n      var dx = 2;\n      var dy = -2;\n      var ball = {\n        radius: 10\n      };\n      var paddle = {\n        height: 10,\n        width: 100\n      };\n      var paddleX = (canvas.width - paddle.width) / 2;\n      var rightPressed = false;\n      var leftPressed = false;\n      var brickRowCount = 3;\n      var brickColumnCount = 6;\n      var brickWidth = 75;\n      var brickHeight = 20;\n      var brickPadding = 15;\n      var brickOffsetTop = 30;\n      var brickOffsetLeft = 30;\n      var brickX = c * (brickWidth + brickPadding) + brickOffsetLeft;\n      var brickY = r * (brickHeight + brickPadding) + brickOffsetTop;\n      var bricks = [];\n\n      for (var c = 0; c < brickColumnCount; c++) {\n        bricks[c] = [];\n\n        for (var r = 0; r < brickRowCount; r++) {\n          bricks[c][r] = {\n            x: 0,\n            y: 0,\n            status: 1\n          };\n        }\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Col, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        id: \"game-canvas\",\n        height: \"600px\",\n        width: \"800px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport default Canvas; // var x = canvas.width / 2;\n// var y = canvas.height / 2;\n// var dx = 2;\n// var dy = -2;\n// var ball = {\n//     radius: 10\n// };\n// var paddle = {\n//     height: 10,\n//     width: 100,\n// };\n// var paddleX = (canvas.width - paddle.width) / 2;\n// var rightPressed = false;\n// var leftPressed = false;\n// var brickRowCount = 3;\n// var brickColumnCount = 6;\n// var brickWidth = 75;\n// var brickHeight = 20;\n// var brickPadding = 15;\n// var brickOffsetTop = 30;\n// var brickOffsetLeft = 30;\n// var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\n// var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\n// var bricks = [];\n// for (var c = 0; c < brickColumnCount; c++) {\n//     bricks[c] = [];\n//     for (var r = 0; r < brickRowCount; r++) {\n//         bricks[c][r] = { x: 0, y: 0, status: 1 };\n//     }\n// }\n// //keyHandler\n// document.addEventListener(\"keydown\", keyDownHandler, false);\n// document.addEventListener(\"keyup\", keyUpHandler, false);\n// //collision detection between bricks and ball\n// function collisionDetection() {\n//     for (var c = 0; c < brickColumnCount; c++) {\n//         for (var r = 0; r < brickRowCount; r++) {\n//             var b = [c][r];\n//             if (x < b.x && b.x + brickWidth && y > b.y && y + brickHeight) {\n//                 dy = -dy\n//                 b.status = 0;\n//             }\n//         }\n//     }\n// }\n// function keyDownHandler(e) {\n//     if (e.keyCode == 39) {\n//         rightPressed = true;\n//     }\n//     else if (e.keyCode == 37) {\n//         leftPressed = true;\n//     }\n// }\n// function keyUpHandler(e) {\n//     if (e.keyCode == 39) {\n//         rightPressed = false;\n//     }\n//     else if (e.keyCode == 37) {\n//         leftPressed = false;\n//     }\n// }\n// function drawBall() {\n//     ctx.beginPath();\n//     ctx.arc(x, y, ball.radius, 0, Math.PI * 2);\n//     ctx.fillStyle = \"#FF0049\";\n//     ctx.fill();\n//     ctx.closePath();\n// }\n// function drawPaddle() {\n//     ctx.beginPath();\n//     ctx.rect(paddleX, canvas.height - paddle.height - 20, paddle.width, paddle.height);\n//     ctx.fillStyle = \"#00CCDD\";\n//     ctx.fill();\n//     ctx.closePath();\n// }\n// function drawBricks() {\n//     for (var c = 0; c < brickColumnCount; c++) {\n//         for (var r = 0; r < brickRowCount; r++) {\n//             if (bricks[c][r].status == 1) {\n//                 var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\n//                 var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\n//                 bricks[c][r].x = brickX;\n//                 bricks[c][r].y = brickY;\n//                 ctx.beginPath();\n//                 ctx.rect(brickX, brickY, brickWidth, brickHeight);\n//                 ctx.fillStyle = \"#FFBB00\";\n//                 ctx.fill();\n//                 ctx.closePath();\n//             }\n//         }\n//     }\n// }\n// function draw() {\n//     ctx.clearRect(0, 0, canvas.width, canvas.height);\n//     drawBall();\n//     drawPaddle();\n//     collisionDetection();\n//     drawBricks();\n//     //ball reverse when hitting left & right\n//     if (x + dx > canvas.width - ball.radius || x + dx < ball.radius) {\n//         dx = -dx;\n//     }\n//     //ball reverse when hitting top\n//     if (y + dy < ball.radius) {\n//         dy = -dy;\n//     }\n//     if (x > paddleX && x < paddleX + paddle.width) {\n//         dy = -dy;\n//     }\n//     else {\n//     }\n//     if (rightPressed && paddleX < canvas.width - paddle.width) {\n//         paddleX += 7;\n//     }\n//     else if (leftPressed && paddleX > 0) {\n//         paddleX -= 7;\n//     }\n//     x += dx;\n//     y += dy;\n// }\n// setInterval(draw, 10);","map":{"version":3,"sources":["/Users/admin/Workspace/Kanya/react-spel/src/Components/Canvas.js"],"names":["React","Component","Container","Col","Canvas","canvas","refs","ctx","getContext","x","width","y","height","dx","dy","ball","radius","paddle","paddleX","rightPressed","leftPressed","brickRowCount","brickColumnCount","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","brickX","c","brickY","r","bricks","status"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,YAA/B;AACA,OAAO,cAAP;;IAEMC,M;;;;;;;;;;;;;AAEF;AACA;AACA;AAEA;AACA;AACA;AACA;6BAES;AACL,UAAMC,MAAM,GAAG,KAAKC,IAAL,CAAUD,MAAzB;AACA,UAAME,GAAG,GAAGF,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AAEA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAP,GAAe,CAAvB;AACA,UAAIC,CAAC,GAAGN,MAAM,CAACO,MAAP,GAAgB,CAAxB;AACA,UAAIC,EAAE,GAAG,CAAT;AACA,UAAIC,EAAE,GAAG,CAAC,CAAV;AAEA,UAAIC,IAAI,GAAG;AACPC,QAAAA,MAAM,EAAE;AADD,OAAX;AAIA,UAAIC,MAAM,GAAG;AACTL,QAAAA,MAAM,EAAE,EADC;AAETF,QAAAA,KAAK,EAAE;AAFE,OAAb;AAKA,UAAIQ,OAAO,GAAG,CAACb,MAAM,CAACK,KAAP,GAAeO,MAAM,CAACP,KAAvB,IAAgC,CAA9C;AAEA,UAAIS,YAAY,GAAG,KAAnB;AACA,UAAIC,WAAW,GAAG,KAAlB;AAEA,UAAIC,aAAa,GAAG,CAApB;AACA,UAAIC,gBAAgB,GAAG,CAAvB;AACA,UAAIC,UAAU,GAAG,EAAjB;AACA,UAAIC,WAAW,GAAG,EAAlB;AACA,UAAIC,YAAY,GAAG,EAAnB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,UAAIC,eAAe,GAAG,EAAtB;AACA,UAAIC,MAAM,GAAIC,CAAC,IAAIN,UAAU,GAAGE,YAAjB,CAAF,GAAoCE,eAAjD;AACA,UAAIG,MAAM,GAAIC,CAAC,IAAIP,WAAW,GAAGC,YAAlB,CAAF,GAAqCC,cAAlD;AAEA,UAAIM,MAAM,GAAG,EAAb;;AACA,WAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,gBAApB,EAAsCO,CAAC,EAAvC,EAA2C;AACvCG,QAAAA,MAAM,CAACH,CAAD,CAAN,GAAY,EAAZ;;AACA,aAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,aAApB,EAAmCU,CAAC,EAApC,EAAwC;AACpCC,UAAAA,MAAM,CAACH,CAAD,CAAN,CAAUE,CAAV,IAAe;AAAEtB,YAAAA,CAAC,EAAE,CAAL;AAAQE,YAAAA,CAAC,EAAE,CAAX;AAAcsB,YAAAA,MAAM,EAAE;AAAtB,WAAf;AACH;AACJ;;AACD,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,EAAE,EAAC,aAAX;AAAyB,QAAA,MAAM,EAAC,OAAhC;AAAwC,QAAA,KAAK,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EA1DgBhC,S;;AA6DrB,eAAeG,MAAfsourcesContent":["import React, { Component } from 'react';\nimport { Container, Col } from 'reactstrap';\nimport './../App.css';\n\nclass Canvas extends Component {\n\n    // componentDidMount() {\n    //     this.updateCanvas();\n    // }\n\n    // updateCanvas() {\n    //     const canvas = this.refs.canvas;\n    //     const ctx = canvas.getContext(\"2d\");\n    // }\n\n    render() {\n        const canvas = this.refs.canvas;\n        const ctx = canvas.getContext(\"2d\");\n\n        var x = canvas.width / 2;\n        var y = canvas.height / 2;\n        var dx = 2;\n        var dy = -2;\n        \n        var ball = {\n            radius: 10\n        };\n        \n        var paddle = {\n            height: 10,\n            width: 100,\n        };\n        \n        var paddleX = (canvas.width - paddle.width) / 2;\n        \n        var rightPressed = false;\n        var leftPressed = false;\n        \n        var brickRowCount = 3;\n        var brickColumnCount = 6;\n        var brickWidth = 75;\n        var brickHeight = 20;\n        var brickPadding = 15;\n        var brickOffsetTop = 30;\n        var brickOffsetLeft = 30;\n        var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\n        var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\n\n        var bricks = [];\n        for (var c = 0; c < brickColumnCount; c++) {\n            bricks[c] = [];\n            for (var r = 0; r < brickRowCount; r++) {\n                bricks[c][r] = { x: 0, y: 0, status: 1 };\n            }\n        }\n        return (\n            <Container>\n                <Col align=\"center\">\n                    <canvas id=\"game-canvas\" height=\"600px\" width=\"800px\"></canvas>\n                </Col>\n            </Container>\n        );\n    }\n}\n\nexport default Canvas;\n\n\n// var x = canvas.width / 2;\n// var y = canvas.height / 2;\n// var dx = 2;\n// var dy = -2;\n\n// var ball = {\n//     radius: 10\n// };\n\n// var paddle = {\n//     height: 10,\n//     width: 100,\n// };\n\n// var paddleX = (canvas.width - paddle.width) / 2;\n\n// var rightPressed = false;\n// var leftPressed = false;\n\n// var brickRowCount = 3;\n// var brickColumnCount = 6;\n// var brickWidth = 75;\n// var brickHeight = 20;\n// var brickPadding = 15;\n// var brickOffsetTop = 30;\n// var brickOffsetLeft = 30;\n// var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\n// var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\n\n// var bricks = [];\n// for (var c = 0; c < brickColumnCount; c++) {\n//     bricks[c] = [];\n//     for (var r = 0; r < brickRowCount; r++) {\n//         bricks[c][r] = { x: 0, y: 0, status: 1 };\n//     }\n// }\n\n\n// //keyHandler\n// document.addEventListener(\"keydown\", keyDownHandler, false);\n// document.addEventListener(\"keyup\", keyUpHandler, false);\n\n// //collision detection between bricks and ball\n// function collisionDetection() {\n//     for (var c = 0; c < brickColumnCount; c++) {\n//         for (var r = 0; r < brickRowCount; r++) {\n//             var b = [c][r];\n//             if (x < b.x && b.x + brickWidth && y > b.y && y + brickHeight) {\n//                 dy = -dy\n//                 b.status = 0;\n//             }\n//         }\n//     }\n// }\n\n// function keyDownHandler(e) {\n//     if (e.keyCode == 39) {\n//         rightPressed = true;\n//     }\n//     else if (e.keyCode == 37) {\n//         leftPressed = true;\n//     }\n// }\n// function keyUpHandler(e) {\n//     if (e.keyCode == 39) {\n//         rightPressed = false;\n//     }\n//     else if (e.keyCode == 37) {\n//         leftPressed = false;\n//     }\n// }\n\n// function drawBall() {\n//     ctx.beginPath();\n//     ctx.arc(x, y, ball.radius, 0, Math.PI * 2);\n//     ctx.fillStyle = \"#FF0049\";\n//     ctx.fill();\n//     ctx.closePath();\n// }\n\n// function drawPaddle() {\n//     ctx.beginPath();\n//     ctx.rect(paddleX, canvas.height - paddle.height - 20, paddle.width, paddle.height);\n//     ctx.fillStyle = \"#00CCDD\";\n//     ctx.fill();\n//     ctx.closePath();\n// }\n\n// function drawBricks() {\n//     for (var c = 0; c < brickColumnCount; c++) {\n//         for (var r = 0; r < brickRowCount; r++) {\n//             if (bricks[c][r].status == 1) {\n//                 var brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\n//                 var brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\n//                 bricks[c][r].x = brickX;\n//                 bricks[c][r].y = brickY;\n//                 ctx.beginPath();\n//                 ctx.rect(brickX, brickY, brickWidth, brickHeight);\n//                 ctx.fillStyle = \"#FFBB00\";\n//                 ctx.fill();\n//                 ctx.closePath();\n//             }\n//         }\n//     }\n// }\n\n// function draw() {\n//     ctx.clearRect(0, 0, canvas.width, canvas.height);\n//     drawBall();\n//     drawPaddle();\n//     collisionDetection();\n//     drawBricks();\n\n//     //ball reverse when hitting left & right\n//     if (x + dx > canvas.width - ball.radius || x + dx < ball.radius) {\n//         dx = -dx;\n//     }\n\n//     //ball reverse when hitting top\n//     if (y + dy < ball.radius) {\n//         dy = -dy;\n//     }\n\n//     if (x > paddleX && x < paddleX + paddle.width) {\n//         dy = -dy;\n//     }\n//     else {\n\n//     }\n\n\n//     if (rightPressed && paddleX < canvas.width - paddle.width) {\n//         paddleX += 7;\n//     }\n//     else if (leftPressed && paddleX > 0) {\n//         paddleX -= 7;\n//     }\n\n\n//     x += dx;\n//     y += dy;\n// }\n\n// setInterval(draw, 10);\n\n"]},"metadata":{},"sourceType":"module"}