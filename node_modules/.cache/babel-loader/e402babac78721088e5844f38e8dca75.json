{"ast":null,"code":"import _classCallCheck from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/admin/Workspace/Kanya/react-spel/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/admin/Workspace/Kanya/react-spel/src/Components/Canvas.js\";\nimport React, { Component } from 'react';\nimport { Container, Col } from 'reactstrap';\nimport './../App.css';\nvar gameWidth = 600;\nvar gameHeight = 400;\nvar colors = [\"#18582b\", \"#0c905d\", \"#00c78e\", \"#33dbff\", \"#3375ff\", \"#5733ff\"];\n\nvar Canvas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Canvas, _Component);\n\n  function Canvas(props) {\n    var _this;\n\n    _classCallCheck(this, Canvas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Canvas).call(this, props));\n    _this.state = {\n      rightPressed: false,\n      leftPressed: false\n    };\n    _this.canvasRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Canvas, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCanvas();\n    }\n  }, {\n    key: \"updateCanvas\",\n    value: function updateCanvas() {\n      var canvas = this.canvasRef.current;\n      var ctx = canvas.getContext('2d');\n      var width = gameWidth;\n      var height = gameHeight;\n      var brickWidth = width / 10 - 2.25;\n      var ball = {\n        x: width / 2 - 3,\n        y: height / 2 - 3,\n        radius: 6,\n        speedX: 0,\n        speedY: 6\n      };\n      var paddle = {\n        w: 100,\n        h: 10,\n        x: width / 2 - 100 / 2,\n        y: height - 10,\n        speed: 6\n      };\n      var bricks = [];\n      var bonuses = [];\n      var ballOn = false,\n          color,\n          gameOver = 0;\n\n      function keyListener() {\n        this.pressedKeys = [];\n\n        this.keydown = function (e) {\n          this.pressedKeys[e.keyCode] = true;\n        };\n\n        this.keyup = function (e) {\n          this.pressedKeys[e.keyCode] = false;\n        };\n\n        document.addEventListener(\"keydown\", this.keydown.bind(this));\n        document.addEventListener(\"keyup\", this.keyup.bind(this));\n      }\n\n      keyListener.prototype.isPressed = function (key) {\n        return this.pressedKeys[key] ? true : false;\n      };\n\n      keyListener.prototype.addKeyPressListener = function (keyCode, callback) {\n        document.addEventListener(\"keypress\", function (e) {\n          if (e.keyCode == keyCode) {\n            callback(e);\n          }\n        });\n      };\n\n      var keys = new keyListener();\n\n      function createBonus(brick) {\n        var chance = Math.floor(Math.random() * (10 - 1 + 1) + 1);\n\n        if (chance === 1) {\n          var randomNum = Math.floor(Math.random() * (4 - 1 + 1) + 1);\n          var bonus = {\n            x: brick.x + brick.w / 2 - 5,\n            y: brick.y,\n            w: 10,\n            h: 10,\n            type: randomNum\n          };\n          bonuses.push(bonus);\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Col, {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        height: \"400px\",\n        width: \"600px\",\n        ref: this.canvasRef,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Canvas;\n}(Component);\n\nexport default Canvas;","map":{"version":3,"sources":["/Users/admin/Workspace/Kanya/react-spel/src/Components/Canvas.js"],"names":["React","Component","Container","Col","gameWidth","gameHeight","colors","Canvas","props","state","rightPressed","leftPressed","canvasRef","createRef","updateCanvas","canvas","current","ctx","getContext","width","height","brickWidth","ball","x","y","radius","speedX","speedY","paddle","w","h","speed","bricks","bonuses","ballOn","color","gameOver","keyListener","pressedKeys","keydown","e","keyCode","keyup","document","addEventListener","bind","prototype","isPressed","key","addKeyPressListener","callback","keys","createBonus","brick","chance","Math","floor","random","randomNum","bonus","type","push"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Container, Col } from 'reactstrap';\nimport './../App.css';\n\nconst gameWidth = 600;\nconst gameHeight = 400;\nconst colors=[\"#18582b\",\"#0c905d\",\"#00c78e\",\"#33dbff\",\"#3375ff\",\"#5733ff\"];\n\nclass Canvas extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            rightPressed: false,\n            leftPressed: false\n        }\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.updateCanvas();\n    }\n\n    updateCanvas() {\n        const canvas = this.canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        const width = gameWidth;\n        const height = gameHeight;\n        const brickWidth = (width / 10) - 2.25;\n\n        let ball = {\n            x: (width / 2) - 3,\n            y: (height / 2) - 3,\n            radius: 6,\n            speedX: 0,\n            speedY: 6\n        }\n\n        let paddle = {\n            w: 100,\n            h: 10,\n            x: width / 2 - (100 / 2),\n            y: height - 10,\n            speed: 6\n        }\n\n        let bricks = [];\n        let bonuses = [];\n        let ballOn = false, color, gameOver = 0;\n\n        function keyListener() {\n            this.pressedKeys = [];\n            this.keydown = function(e) { this.pressedKeys[e.keyCode] = true};\n            this.keyup = function(e) {this.pressedKeys[e.keyCode] = false};\n            document.addEventListener(\"keydown\", this.keydown.bind(this));\n            document.addEventListener(\"keyup\", this.keyup.bind(this));\n        }\n        keyListener.prototype.isPressed = function(key) {\n            return this.pressedKeys[key] ? true : false;\n        };\n        keyListener.prototype.addKeyPressListener = \n        function(keyCode, callback) {\n            document.addEventListener(\"keypress\", function(e){\n                if(e.keyCode == keyCode) {\n                    callback(e);\n                }\n            });\n        };\n        var keys = new keyListener();\n\n        function createBonus(brick) {\n            let chance = Math.floor(Math.random() * (10 - 1 + 1) + 1);\n            if(chance === 1) {\n                let randomNum = Math.floor(Math.random() * (4 - 1 + 1) + 1);\n                let bonus = {\n                    x: brick.x + brick.w / 2 - 5,\n                    y: brick.y,\n                    w: 10,\n                    h: 10,\n                    type: randomNum\n                }\n                bonuses.push(bonus);\n            }\n        }\n\n\n        }\n\n    render() {\n        return (\n            <Container>\n                <Col align=\"center\">\n                    <canvas height=\"400px\" width=\"600px\" ref={this.canvasRef}></canvas>\n                </Col>\n            </Container>\n        );\n    }\n}\n\nexport default Canvas;\n\n\n"]},"metadata":{},"sourceType":"module"}